{"ast":null,"code":"var _jsxFileName = \"D:\\\\LogService\\\\front\\\\logservice_front\\\\src\\\\Components\\\\Accesses.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport GridElement from './GridElement';\n\n//bootstrap and tailwind -- css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accesses = () => {\n  _s();\n  const [successAccesses, setSuccessAccesses] = useState(false);\n  const [data, setData] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n  const [sortPropertyName, setSortPropertyName] = useState('');\n  const [isSortByDescending, setIsSortByDescending] = useState(true);\n  const [addressSearchField, setAddressSearchField] = useState('');\n  const [countSearchFieldData, setCountSearchFieldData] = useState(0);\n  const handleClick = () => {\n    setSuccessAccesses(!successAccesses);\n  };\n  const fetchData = async () => {\n    const countSearchField = countSearchFieldData > 0 ? countSearchFieldData : null;\n    const requestBody = {\n      pageNumber,\n      pageSize,\n      sortPropertyName,\n      isSortByDescending,\n      addressSearchField,\n      countSearchField\n    };\n    try {\n      const url = successAccesses ? process.env.REACT_APP_SUCCESSACCESSES_URL : process.env.REACT_APP_ALLACCESSES_URL;\n      const response = await axios.post(url, requestBody, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setData(response.data.logs);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setData([]);\n    }\n  };\n  useEffect(() => {\n    let controller = new AbortController();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: successAccesses ? 'Success Accesses' : 'All Accesses'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Toggle Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Address\",\n          value: addressSearchField,\n          onChange: e => setAddressSearchField(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Count\",\n          value: countSearchFieldData,\n          onChange: e => setCountSearchFieldData(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchData,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"IsSortByDescending:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isSortByDescending,\n            onChange: e => setIsSortByDescending(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"SortPropertyName:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\",\n            value: sortPropertyName,\n            onChange: e => setSortPropertyName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Page Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: pageSize,\n            onChange: e => setPageSize(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Page Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: pageNumber,\n            onChange: e => setPageNumber(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Array.isArray(data) ? data.map(item => /*#__PURE__*/_jsxDEV(GridElement, {\n          addressName: item.addressName,\n          accessesCount: item.accessesCount\n        }, item.addressName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n_s(Accesses, \"elSZiBTAIg+EOYE9lVs83vfb4Ws=\");\n_c = Accesses;\nexport default Accesses;\nvar _c;\n$RefreshReg$(_c, \"Accesses\");","map":{"version":3,"names":["axios","useState","useEffect","GridElement","jsxDEV","_jsxDEV","Accesses","_s","successAccesses","setSuccessAccesses","data","setData","pageNumber","setPageNumber","pageSize","setPageSize","sortPropertyName","setSortPropertyName","isSortByDescending","setIsSortByDescending","addressSearchField","setAddressSearchField","countSearchFieldData","setCountSearchFieldData","handleClick","fetchData","countSearchField","requestBody","url","process","env","REACT_APP_SUCCESSACCESSES_URL","REACT_APP_ALLACCESSES_URL","response","post","headers","logs","error","console","controller","AbortController","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","Number","checked","Array","isArray","map","item","addressName","accessesCount","_c","$RefreshReg$"],"sources":["D:/LogService/front/logservice_front/src/Components/Accesses.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport GridElement from './GridElement';\r\n\r\n//bootstrap and tailwind -- css\r\n\r\nconst Accesses = () => {\r\n\r\n  const [successAccesses, setSuccessAccesses] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const [sortPropertyName, setSortPropertyName] = useState('');\r\n  const [isSortByDescending, setIsSortByDescending] = useState(true);\r\n  const [addressSearchField, setAddressSearchField] = useState('');\r\n  const [countSearchFieldData, setCountSearchFieldData] = useState(0);\r\n\r\n  const handleClick = () => {\r\n    setSuccessAccesses(!successAccesses);\r\n}\r\n\r\n  const fetchData = async () => {\r\n\r\n    const countSearchField = countSearchFieldData > 0 \r\n      ? countSearchFieldData \r\n      : null;\r\n\r\n    const requestBody = {\r\n      pageNumber,\r\n      pageSize,\r\n      sortPropertyName,\r\n      isSortByDescending,\r\n      addressSearchField,\r\n      countSearchField,\r\n    };\r\n\r\n    try {\r\n      const url = successAccesses \r\n        ? process.env.REACT_APP_SUCCESSACCESSES_URL\r\n        : process.env.REACT_APP_ALLACCESSES_URL;\r\n\r\n      const response = await axios.post(url, requestBody, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      setData(response.data.logs);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setData([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let controller = new AbortController();\r\n  }, []);\r\n\r\n    return (\r\n      <div>\r\n        <h1>{successAccesses ? 'Success Accesses' : 'All Accesses'}</h1>\r\n        <button onClick={handleClick}>Toggle Fetch</button>\r\n        <div>\r\n            <div>\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"Address\"\r\n                value={addressSearchField}\r\n                onChange={(e) => setAddressSearchField(e.target.value)}\r\n                />\r\n                <input\r\n                type=\"number\"\r\n                placeholder=\"Count\"\r\n                value={countSearchFieldData}\r\n                onChange={(e) => setCountSearchFieldData(Number(e.target.value))}\r\n                />\r\n                <button \r\n                onClick={fetchData}>Search\r\n                </button>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                IsSortByDescending: \r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isSortByDescending}\r\n                  onChange={(e) => setIsSortByDescending(e.target.checked)}\r\n                />\r\n              </label>\r\n              <label>\r\n                SortPropertyName: \r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  value={sortPropertyName}\r\n                  onChange={(e) => setSortPropertyName(e.target.value)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                Page Size:\r\n                <input\r\n                    type=\"number\"\r\n                    value={pageSize}\r\n                    onChange={(e) => setPageSize(Number(e.target.value))}\r\n                />\r\n                </label>\r\n                <label>\r\n                Page Number:\r\n                <input\r\n                    type=\"number\"\r\n                    value={pageNumber}\r\n                    onChange={(e) => setPageNumber(Number(e.target.value))}\r\n                />\r\n                </label>\r\n            </div>\r\n            <ul>\r\n                {Array.isArray(data) ? (\r\n                data.map((item) => (\r\n                    <GridElement \r\n                    key={item.addressName}\r\n                    addressName={item.addressName}\r\n                    accessesCount={item.accessesCount}\r\n                    />\r\n                ))\r\n                ) : (\r\n                <li>No data available</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Accesses;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}